{"version":3,"sources":["components/Card/CardImage/WelcomeToCardEmptyBack.jpg","components/Card/CardImage/Welcome_To_Fillable_Sheet_PDF_v2.0.pdf","components/Card/CardImage/pic3761012.jpg","components/Card/CardImage/board.png","components/Card/CardImage/WelcomeToCardPanorama.jpg","components/Card/CardImage/WelcomeToCardFences.jpg","components/Card/CardImage/WelcomeToCardWork.jpg","components/Card/CardImage/WelcomeToCardBis.jpg","components/Card/CardImage/WelcomeToCardSwimpoll.jpg","components/Card/CardImage/WelcomeToCardMarket.jpg","components/Card/CardImage/WelcomeToCardSampleBack.jpg","components/Card/CardImage/IconFences.png","components/Card/CardImage/IconMarket.png","components/Card/CardImage/IconPark.png","components/Card/CardImage/IconSwimm.png","components/Card/CardImage/IconWork.png","components/Card/CardImage/IconBIS.png","components/Card/CardImage/goalcitycard.jpg","components/Card/CardImage/pic5177842.jpg","components/Card/CardImage/1_omZ8d6IrFlpzEaa2ihKniQ@2x.jpeg","components/Card/CardImage/welcometoslider.jpg","components/Card/CityPlanCard/citycardplanimage sync /^/.//.*$","components/Card/CityPlanCard/citycardplanimage/card1-1.jpg","components/Card/CityPlanCard/citycardplanimage/card1-2.jpg","components/Card/CityPlanCard/citycardplanimage/card1-3.jpg","components/Card/CityPlanCard/citycardplanimage/card1-4.jpg","components/Card/CityPlanCard/citycardplanimage/card1-5.jpg","components/Card/CityPlanCard/citycardplanimage/card1-6.jpg","components/Card/CityPlanCard/citycardplanimage/card2-1.jpg","components/Card/CityPlanCard/citycardplanimage/card2-2.jpg","components/Card/CityPlanCard/citycardplanimage/card2-3.jpg","components/Card/CityPlanCard/citycardplanimage/card2-4.jpg","components/Card/CityPlanCard/citycardplanimage/card2-5.jpg","components/Card/CityPlanCard/citycardplanimage/card2-6.jpg","components/Card/CityPlanCard/citycardplanimage/card3-1.jpg","components/Card/CityPlanCard/citycardplanimage/card3-2.jpg","components/Card/CityPlanCard/citycardplanimage/card3-3.jpg","components/Card/CityPlanCard/citycardplanimage/card3-4.jpg","components/Card/CityPlanCard/citycardplanimage/card3-5.jpg","components/Card/CityPlanCard/citycardplanimage/card3-6.jpg","components/socket-contex.js","components/JoinGame/JoinGame.js","components/WelcomeGame/WelcomeGame/WelcomeGame.js","components/FillablePdf/FillablePdf.js","components/home.js","components/Card/CardMethods/DrawCard.js","components/Card/CardMethods/Card.js","components/Card/CardMethods/DeckBuilder.js","components/Card/BackCard.js","components/Card/Deck.js","components/Card/CardMethods/Button.js","components/Card/CityPlanCard/CityPlanCard.js","components/Card/CardMethods/CardDrawer.js","components/Rulespage/Rulespage.js","components/MainRoom/MainRoom.js","components/Card/NavBar/Tab/TabNavbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","SocketContext","React","createContext","JoinWindow","props","useState","name","setName","gameId","setGameId","message","setMessage","socket","useContext","useEffect","on","data","Container","className","Form","Group","controlId","Label","Control","value","onChange","target","type","placeholder","Button","variant","onClick","evt","preventDefault","emit","WelcomeGame","Component","Fillable","href","PDF","width","height","List","getList","a","state","list","this","context","Row","Col","lg","Image","src","BoxArtwork","fluid","ImageHome","contextType","drawCard","deck","deckLength","count","drawedCards","push","pop","Card","suit","undefined","panoramaNumber","fenceNumber","marketNumber","panoramaFilter","fenceFilter","marketFilter","deck1","deck2","deck3","buildeck","card_names","card_suits","s","length","n","indexOf","launchDeckNew","sort","Math","floor","random","randomShuffle","splice","BackCard","prop","SpecificCard","Panorama","Fences","Work","Bis","SwimmingPool","Swimpool","Market","card","alt","Deck","numberString","deckA","slice","toString","deckimage","charAt","EmptyCard","ButtonComponent","action","text","CityPlanCardPage","CityPlanCardList","setCityPlanCardList","roomId","fetch","res","json","then","catch","x","index","key","Img","require","imageUrl","Body","Title","style","fontSize","Text","players","CardDrawer","cardDraw","setcardDraw","deckOne","setDeck","cardDrawTwo","setcardDrawTwo","deckTwo","setDeckTwo","cardDrawThree","setcardDrawThree","deckThree","setDeckThree","location","Playerjoined","Gameid","URL","window","pathname","split","filter","Boolean","res1","res2","res3","md","RulesPage","IconFences","IconRealEstate","IconPark","IconSwimm","IconWork","IconBis","GoalCard","MainRoom","history","useHistory","setjoinedPlayer","newGame","setnewGame","setRole","setPlayers","prev","ImageCreateGame","ImageJoinGame","idx","NavTab","Navbar","collapseOnSelect","expand","sticky","bg","Brand","Nav","Link","as","to","Toggle","aria-controls","Collapse","io","process","PORT","App","Provider","path","component","exact","Home","FillablePdf","JoinGame","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.661cab36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardEmptyBack.d328a80b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Welcome_To_Fillable_Sheet_PDF_v2.0.d933d638.pdf\";","module.exports = __webpack_public_path__ + \"static/media/pic3761012.fa5cf0f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/board.4229984c.png\";","module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardPanorama.8afcda11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardFences.bb33b3bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardWork.66943acf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardBis.4764c18d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardSwimpoll.e714c0a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardMarket.2b0ea696.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WelcomeToCardSampleBack.0c591358.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IconFences.42ba97f6.png\";","module.exports = __webpack_public_path__ + \"static/media/IconMarket.62837a5d.png\";","module.exports = __webpack_public_path__ + \"static/media/IconPark.cfec2ccd.png\";","module.exports = __webpack_public_path__ + \"static/media/IconSwimm.fce009a6.png\";","module.exports = __webpack_public_path__ + \"static/media/IconWork.11dc2add.png\";","module.exports = __webpack_public_path__ + \"static/media/IconBIS.39bd012a.png\";","module.exports = __webpack_public_path__ + \"static/media/goalcitycard.4b8bc985.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic5177842.8b7946a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_omZ8d6IrFlpzEaa2ihKniQ@2x.c2414420.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/welcometoslider.70480d1d.jpg\";","var map = {\n\t\"./card1-1.jpg\": 144,\n\t\"./card1-2.jpg\": 145,\n\t\"./card1-3.jpg\": 146,\n\t\"./card1-4.jpg\": 147,\n\t\"./card1-5.jpg\": 148,\n\t\"./card1-6.jpg\": 149,\n\t\"./card2-1.jpg\": 150,\n\t\"./card2-2.jpg\": 151,\n\t\"./card2-3.jpg\": 152,\n\t\"./card2-4.jpg\": 153,\n\t\"./card2-5.jpg\": 154,\n\t\"./card2-6.jpg\": 155,\n\t\"./card3-1.jpg\": 156,\n\t\"./card3-2.jpg\": 157,\n\t\"./card3-3.jpg\": 158,\n\t\"./card3-4.jpg\": 159,\n\t\"./card3-5.jpg\": 160,\n\t\"./card3-6.jpg\": 161\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 143;","module.exports = __webpack_public_path__ + \"static/media/card1-1.ae53fe0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card1-2.8a629a64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card1-3.585227c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card1-4.ceeb5acc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card1-5.47cd86bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card1-6.28b5e501.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card2-1.cc014c7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card2-2.c2ca6aec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card2-3.8c656efb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card2-4.545a1bed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card2-5.23b56c3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card2-6.61164fcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card3-1.da7e8baf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card3-2.1a0c8cd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card3-3.83612a8b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card3-4.c15afd2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card3-5.29c6d419.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card3-6.d237739c.jpg\";","import React from \"react\";\n\nconst SocketContext = React.createContext();\n\nexport default SocketContext;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\n\nimport SocketContext from \"../socket-contex\";\nimport './JoinGame.css'\n\n\nfunction JoinWindow(props) {\n    \n    const [name, setName] = useState(\"\");\n    const [gameId, setGameId] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n\n    const socket = useContext(SocketContext);\n\n\n const onNameSubmit = (data) => {\n   // console.log(\"data submitted\", data)\n   socket.emit(\"PLAYER_JOIN_GAME\", data);\n };\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onNameSubmit({ name: name, gameId: gameId });\n    };\n\n  useEffect(() => {\n    socket.on(\"playerJoinedRoom\", (data) => {\n        console.log(\"CLIENT: playerJoinedRoom\", data);   \n        setMessage(data.message)  \n        \n    })\n      \n      \n      socket.on('error', message => {\n           setMessage(message); \n     })   \n  }, []);\n\n\n    return (\n      <>\n        <Container className=\"form-contain\">\n          <div className=\"form\">\n            <Form>\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicId\">\n                <Form.Label>Game Id</Form.Label>\n                <Form.Control\n                  value={gameId}\n                  onChange={(e) => setGameId(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Game Id\"\n                />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n                Start\n              </Button>\n            </Form>\n            <p>{message}</p>\n          </div>\n        </Container>\n      </>\n    );\n}\n\n\nexport default JoinWindow","import React, { Component } from \"react\";\n\n\n\nclass WelcomeGame extends Component {\n    constructor(props) {\n        super(props);\n    }\nrender() {\n    return (\n        <>\n            <div className=\"title\">\n        <h2>Welcome To - Companion App</h2>\n                \n                </div>\n            </>\n    );\n  }\n}\n    \n   \n\n\nexport default WelcomeGame","import React from 'react';\n\nimport PDF from \"../Card/CardImage/Welcome_To_Fillable_Sheet_PDF_v2.0.pdf\";\n\n\n const Fillable = () => {\n    return (\n      <>\n        <div className=\"fillable-pdf\">\n          <p id=\"example-collapse-text\">\n            Based on Dobey's Welcome To{\" \"}\n            <a href=\"https://boardgamegeek.com/boardgame/233867/welcome/files\">\n              Fillable Player Sheet PDF\n            </a>\n          </p>\n\n          <object\n            data={`${PDF}#zoom=80&scrollbar=0&toolbar=0&navpanes=0`}\n            type=\"application/pdf\"\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <p>\n              This browser does not support\n              PDFs. Please download the PDF to view it:\n              <a href={`${PDF}`}>\n                Download PDF\n              </a>\n              .\n            </p>\n          </object>\n\n          {/* <embed\n            src={`${PDF}#zoom=80&scrollbar=0&toolbar=0&navpanes=0`}\n          ></embed> */}\n        </div>\n      </>\n    );\n}\nexport default Fillable","import React, { Component } from \"react\";\nimport SocketContext from \"./socket-contex\";\nimport { Container, Carousel, Row, Col, Image } from \"react-bootstrap\";\nimport ImageSlider1 from './Card/CardImage/welcometoslider.jpg'\nimport BoxArtwork from './Card/CardImage/pic3761012.jpg'\nimport ImageHome from './Card/CardImage/board.png'\n\n\n\n\nclass List extends Component {\n  static contextType = SocketContext;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [],\n    };\n  }\n\n  // Fetch the list on first mount\n  componentDidMount() {\n    console.log(this.context);\n    const socket = this.context;\n\n    socket.on(\"connect\", function () {\n      console.log(\"Connected!\");\n    });\n  }\n\n  getList = async () => {};\n\n  render() {\n\n    return (\n      <>\n        <div className=\"jumbotron text-white jumbotron-image shadow imageg\">\n          <Container className=\"container-fluid\">\n            <h2>About Welcome To... Companion App </h2>\n            <Row>\n              <Col lg={8}>\n                <div>\n                  <p>\n                    The idea of this very simple app was born, on the one hand,\n                    from the desire to learn how to program, on the other from a\n                    real need. Stuck at home by the pandemic, one Sunday we were\n                    playing Welcome To...via Skype with some friends.\n                    <p>\n                      To share the common deck, however, we were forced to keep\n                      a camera fixed on the table, complicating the life of\n                      those who were managing the game from a distance.{\" \"}\n                    </p>\n                  </p>\n                </div>\n              </Col>\n              <Col lg={4}>\n                <div>\n                  <Image className=\"ombra\" src={BoxArtwork} fluid />\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              \n                \n              \n\n              <Col lg={12}>\n                <p>\n                  So the following days I wanted to try to take in hand some\n                  concepts of React, Socket.io, etc, and try to make our life\n                  easier during the next games. It's a very raw version (cover\n                  only the basic game principles), which still lacks a lot of\n                  things (code refactoring, private game sessions) and other\n                  small things.\n                </p>\n                <a href=\"https://oxeyemedia.com/products/pre-order-welcome-to\">\n                  Please support Welcome To... and its author\n                </a>\n              </Col>\n              <Col lg={12}>\n                <Image src={ImageHome} fluid />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\n// const ListComponentWhitSocket = (props) => (\n//   <SocketContext.Consumer>\n//     {(socket) => <List {...props} socket={socket} />}\n//   </SocketContext.Consumer>\n// );\n\nexport default List;\n","let drawCard = (deck, deckLength) => {\n  let count = 0;\n  if (count === deckLength) {\n    let drawedCards = [];\n    count = 0;\n    return drawedCards;\n  } else {\n    let drawedCards = [];\n    drawedCards.push(deck.pop(0));\n    count++;\n    console.log(\"RITORNO DEL METODO DRAWCARD\", drawedCards);\n    return drawedCards;\n  }\n};\n\nexport default drawCard;\n","class Card {\n    constructor(value, name, suit) {\n        this.value = value;\n        this.name = name;\n        this.suit = suit;\n    }\n    toString() {\n        if (this.suit === undefined) {\n            return this.name;\n        }\n        return this.name + \" of \" + this.suit;\n    }\n}\n\n\n\nexport default Card;\n","import Card from \"./Card\";\n\nlet panoramaNumber = [5, 7, 8, 9, 11];\nlet fenceNumber = [5, 6, 8, 10, 11];\nlet marketNumber = [5, 7, 8, 9, 11];\n\nlet panoramaFilter = [3, 13];\nlet fenceFilter = [4, 12];\nlet marketFilter = [3, 13];\n\nlet deck = [];\nlet deck1 = [];\nlet deck2 = [];\nlet deck3 = [];\n\nlet buildeck = function (card_names, card_suits) {\n  for (var s = 0; s < card_suits.length; s++) {\n    for (var n = 0; n < card_names.length; n++) {\n      deck.push(new Card(n + 1, card_names[n], card_suits[s]));\n\n      if (card_suits[s] === \"Panorama\" && panoramaNumber.indexOf(n + 1) > -1) {\n        deck.push(new Card(n + 1, card_names[n], card_suits[s]));\n      } else if (\n        card_suits[s] === \"Panorama\" &&\n        panoramaFilter.indexOf(n + 1) > -1\n      ) {\n        deck.pop(new Card(n + 1, card_names[n], card_suits[s]));\n      } else if (\n        card_suits[s] === \"Market\" &&\n        marketNumber.indexOf(n + 1) > -1\n      ) {\n        deck.push(new Card(n + 1, card_names[n], card_suits[s]));\n      } else if (\n        card_suits[s] === \"Market\" &&\n        marketFilter.indexOf(n + 1) > -1\n      ) {\n        deck.pop(new Card(n + 1, card_names[n], card_suits[s]));\n      } else if (\n        card_suits[s] === \"Fences\" &&\n        fenceNumber.indexOf(n + 1) > -1\n      ) {\n        deck.push(new Card(n + 1, card_names[n], card_suits[s]));\n      } else if (\n        card_suits[s] === \"Fences\" &&\n        fenceFilter.indexOf(n + 1) > -1\n      ) {\n        deck.pop(new Card(n + 1, card_names[n], card_suits[s]));\n      }\n    }\n  }\n};\n\n// Shuffle total deck\nlet randomShuffle = function (deck) {\n  return deck.sort(function () {\n    return Math.floor(Math.random() * 3 + 1) - 2;\n  });\n};\n\n// Build new deck - pass number & suit - shuffle - separate in 3 different deck\nfunction launchDeckNew() {\n  buildeck(\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [\"Panorama\", \"Market\", \"Fences\"]\n  );\n\n  buildeck([3, 4, 6, 7, 8, 9, 10, 12, 13], [\"Work\", \"SwimmingPool\", \"Bis\"]);\n\n  randomShuffle(deck);\n\n  deck1 = deck.splice(0, 27);\n\n  deck2 = deck.splice(0, 27);\n\n  deck3 = deck.splice(0, 27);\n\n  // console.log(\"DECK CREATO \" + deck1);\n}\n\nexport { launchDeckNew, deck1, deck2, deck3 };\n","import React from \"react\";\nimport Panorama from \"../Card/CardImage/WelcomeToCardPanorama.jpg\";\nimport Fences from \"../Card/CardImage/WelcomeToCardFences.jpg\";\nimport Work from \"../Card/CardImage/WelcomeToCardWork.jpg\"\nimport Bis from \"../Card/CardImage/WelcomeToCardBis.jpg\";\nimport Swimpool from \"../Card/CardImage/WelcomeToCardSwimpoll.jpg\";\nimport Market from \"../Card/CardImage/WelcomeToCardMarket.jpg\";\n\n\nimport \"./Card.css\";\n\n\nfunction BackCard(prop) {\nconst cardSymbol = {\n  Panorama: Panorama,\n  Fences: Fences,\n  Work: Work,\n  Bis: Bis,\n  SwimmingPool: Swimpool,\n  Market: Market,\n};\n\n  const SpecificCard = cardSymbol[prop.card.suit];\n  \n  return (\n    console.log(\"FROM BACKCARD\", prop.card.value),\n    (<img src={SpecificCard} alt=\"card-back\" className=\"card-back\" />)\n  );\n}\n\nexport default BackCard;\n","import React from \"react\";\nimport deckimage from \"../Card/CardImage/WelcomeToCardSampleBack.jpg\";\nimport EmptyCard from './CardImage/WelcomeToCardEmptyBack.jpg'\nimport  './Card.css'\n\nfunction Deck(prop) {\n  // To split the number into two div in rendering\n  \n  let deckA = prop.deck.slice(-1)[0];\n  console.log('DECk Total', prop.deck);\n  console.log('Ultimo elemento',prop.deck.slice(-1)[0]);\n\n  let numberString;\n\n  !deckA ? (numberString = \"\") : (numberString = deckA.value.toString());\n\n\n \n\n  return (\n    <>\n      {!deckA ? (\n        <div>\n          <img src={EmptyCard} alt=\"empty-card\" className=\"empty-card \"></img>\n        </div>\n      ) : (\n        <>\n          <div className=\"card-container\">\n              <img src={deckimage} alt={deckA.value} className=\"card-back\" />\n            <div className=\"number-container\">\n              <div className=\"deck-number-high\">\n                <h3>{deckA.value}</h3>\n              </div>\n\n              <div className=\"deck-number-center\">\n                {numberString.length === 1 ? (\n                  <h2 className=\"deck-number-c-single\">{deckA.value}</h2>\n                ) : (\n                  <>\n                    <div className=\"deck-number-c-double\">\n                      <h2>{numberString.charAt(0)}</h2>\n                      <h2>{numberString.charAt(1)}</h2>\n                    </div>\n                  </>\n                )}\n              </div>\n              <div className=\"deck-number-low\">\n                <h3>{deckA.value}</h3>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Deck;\n","import React from 'react';\nimport { Button } from \"react-bootstrap\"; \n\n\nconst ButtonComponent = (props) => {\n  return (\n    <Button variant={props.variant} onClick={() => props.action()}>\n      {props.text}\n    </Button>\n  );\n};\n\n\nexport default ButtonComponent;","import React, { useState, useEffect, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport SocketContext from \"../../socket-contex\";\nimport ButtonComponent from \"../CardMethods/Button\";\n\nexport default function CityPlanCardPage (props) {\n  const [CityPlanCardList, setCityPlanCardList] = useState([]);\n  const socket = useContext(SocketContext);\n\nlet roomId = props.roomId\n\n  useEffect(() => {\n    socket.on(\"CITY_CARD_EMIT\", (data) => {\n      console.log(\"CLIENT: DATI ARRIVO SERVER\");\n      setCityPlanCardList([...data]);\n    });\n  }, [socket]);\n\n  // Retrieves the list of items from the Express app\n  const getList = async () => {\n    try {\n      const res = await fetch(\"/api/getcard\");\n      const data = await res.json();\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  let handleCardDraw = () => {\n    getList()\n      .then((data) => {\n        socket.emit(\"CITY_PLAN_BUTTON\", data, roomId);\n        return data;\n      })\n      .then((data) => setCityPlanCardList([...data]))\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <Container>\n      <div className=\"button-row\">\n        <ButtonComponent\n          variant=\"primary\"\n          text=\"Draw City Card Card\"\n          action={handleCardDraw}\n        />\n      </div>\n      <Row>\n        {CityPlanCardList.map((x, index) => {\n          return (\n            <div>\n              <Col key={index} >\n                <Card>\n                  <Card.Img\n                    className=\"card-back\"\n                    variant=\"top\"\n                    src={require(`./citycardplanimage/${x.imageUrl}`)}\n                  />\n                  <Card.Body>\n                    <Card.Title style={{ fontSize: \"14px\" }}>\n                      City Plan Objective n.{index + 1}\n                    </Card.Title>\n                    <Card.Text></Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </div>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"../Card.css\";\n\n//Method\nimport drawCard from \"./DrawCard\";\nimport \"../../../App.css\";\nimport { launchDeckNew, deck1, deck2, deck3 } from \"./DeckBuilder\";\n\n//Component\nimport BackCard from \"../BackCard\";\nimport Deck from \"../Deck\";\nimport ButtonComponent from \"./Button\";\nimport SocketContext from \"../../socket-contex\";\nimport CityPlanCard from \"../CityPlanCard/CityPlanCard\";\nimport EmptyCard from \"../CardImage/WelcomeToCardEmptyBack.jpg\"\n\n\nlet players = []\n\n\n\nfunction CardDrawer(props) {\n  //Deck1\n  const [cardDraw, setcardDraw] = useState([]); // container for the  drwed back of the card\n  const [deckOne, setDeck] = useState([]); // remaining drawed card of the total deck\n\n  //Deck2\n  const [cardDrawTwo, setcardDrawTwo] = useState([]);\n  const [deckTwo, setDeckTwo] = useState([]);\n\n  //Deck3\n  const [cardDrawThree, setcardDrawThree] = useState([]);\n  const [deckThree, setDeckThree] = useState([]);\n\n  const socket = useContext(SocketContext);\n  \n    const [playresInRoom, SetplayresInRoom] = useState([]);\nconsole.log(\"----->\", props.location.Playerjoined);\nplayers.push(props.location.Playerjoined);\nconsole.log('redirect', props.location.Playerjoined);\n\n\n\n\n  \n  //Capture the last part of URL\n const Gameid = new URL(window.location.href).pathname\n   .split(\"/\")\n   .filter(Boolean)\n   .pop();\n  console.log(Gameid);\n  \n    \n  useEffect(() => {\n \n    socket.on(\n      \"MAINDECK_CARD_BUTTON\",\n      (res1, res2, res3, deck1, deck2, deck3) => {\n        console.log(\"CLIENT: DATI ARRIVO SERVER 1\", deck1);\n        // console.log(\"CLIENT: DATI ARRIVO SERVER 2\", deck2);\n        // console.log(\"CLIENT: DATI ARRIVO SERVER 3\", deck3);\n        // set the back of the card\n        setcardDraw(res1);\n        setcardDrawTwo(res2);\n        setcardDrawThree(res3);\n\n        // set the total deck remainig\n        setDeck(deck1);\n        setDeckTwo(deck2);\n        setDeckThree(deck3);\n      }\n    );\n\n    socket.on(\"RE-SHUFFLE\", (deck1, deck2, deck3) => {\n      launchDeckNew();\n      setDeck(deck1);\n      setDeckTwo(deck2);\n      setDeckThree(deck3);\n      setcardDraw([]);\n      setcardDrawTwo([]);\n      setcardDrawThree([]);\n    });\n  }, []);\n\n//Draw one card form stater deck\n  let handleCardDraw = () => {\n    let res1 = drawCard(deck1, 27);\n    let res2 = drawCard(deck2, 27);\n    let res3 = drawCard(deck3, 27);\n\n    socket.emit(\n      \"MAINDECK_CARD_BUTTON\",\n      res1,\n      res2,\n      res3,\n      deck1,\n      deck2,\n      deck3,\n      Gameid\n    );\n  };\n\n  // Re-Shuffle a initial starter deck\n\n  let reShuffleDeck = () => {\n    \n\n    socket.emit(\"RE-SHUFFLE\", deck1, deck2, deck3, Gameid);\n\n\n  };\n\n  return (\n    <>\n      <Container>\n        <h2>Game Room number {Gameid}</h2>\n        \n        <div className=\"button-row\">\n          <div></div>\n          <div>\n            {deck1.length > 0 ? (\n              <ButtonComponent\n                variant=\"primary\"\n                text=\"Draw a card\"\n                action={handleCardDraw}\n              />\n            ) : (\n              <ButtonComponent\n                variant=\"warning\"\n                text=\"Click to re-shuffle\"\n                action={reShuffleDeck}\n              />\n            )}\n          </div>\n        </div>\n\n        <Row>\n          <Col md=\"6\" lg=\"4\">\n            <Row>\n              <Col>\n                <Deck deck={deckOne}></Deck>\n              </Col>\n\n              <Col>\n                {!cardDraw[0] ? (\n                  <img\n                    src={EmptyCard}\n                    alt=\"empty-card\"\n                    className=\"empty-card \"\n                  ></img>\n                ) : (\n                  <>\n                    <BackCard card={cardDraw[0]}></BackCard>\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Col>\n\n          <Col md=\"6\" lg=\"4\">\n            <Row>\n              <Col>\n                <Deck deck={deckTwo}></Deck>\n              </Col>\n\n              <Col>\n                {!cardDrawTwo[0] ? (\n                  <img\n                    src={EmptyCard}\n                    alt=\"empty-card\"\n                    className=\"empty-card \"\n                  ></img>\n                ) : (\n                  <>\n                    <BackCard card={cardDrawTwo[0]}></BackCard>\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Col>\n\n          <Col md=\"6\" lg=\"4\">\n            <Row>\n              <Col>\n                <Deck deck={deckThree}></Deck>\n              </Col>\n\n              <Col>\n                {!cardDrawThree[0] ? (\n                  <img\n                    src={EmptyCard}\n                    alt=\"empty-card\"\n                    className=\"empty-card \"\n                  ></img>\n                ) : (\n                  <>\n                    <BackCard card={cardDrawThree[0]}></BackCard>\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n\n      <CityPlanCard roomId={Gameid}></CityPlanCard>\n\n      <div className=\"button-row\"></div>\n    </>\n  );\n}\n\nexport default CardDrawer;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport './Rulespage.css'\n\n// Icon Images\nimport IconFences from '../Card/CardImage/IconFences.png'\nimport IconRealEstate from '../Card/CardImage/IconMarket.png'\nimport IconPark from \"../Card/CardImage/IconPark.png\";\nimport IconSwimm from \"../Card/CardImage/IconSwimm.png\";\nimport IconWork from \"../Card/CardImage/IconWork.png\";\nimport IconBis from \"../Card/CardImage/IconBIS.png\";\nimport GoalCard from \"../Card/CardImage/goalcitycard.jpg\";\n\n\nexport default function RulesPage() {\n    return (\n      <>\n        <Container>\n          <br></br>\n          <p className=\"bg-gradient \">\n            <b>Welcome To..</b>. plays like a <b>roll-and-write dice game</b> in\n            which you mark results on a score-sheet...but without dice.\n          </p>\n          <p>\n            Instead you flip cards from three piles to make three different\n            action sets with both a house number and a corresponding action from\n            which everyone chooses one. You use the number to fill in a house on\n            your street in numerical order.\n          </p>\n          <p>\n            Then you take the action to increase the point value of estates you\n            build or score points at the end for building parks and pools.\n            Players also have the option of taking actions to alter or duplicate\n            their house numbers.\n          </p>\n\n          <p>\n            <strong>Effects Reference Sheet</strong>\n          </p>\n          <p>\n            <em>\n              Note: Performing the Effect is always Optional; House numbers must\n              ascend from left to right\n            </em>\n          </p>\n          <p>\n            <strong>\n              Surveyor <img className=\"IconSmall\" src={IconFences} /> – Creates\n              Estates to meet City Plan goals\n            </strong>\n          </p>\n          <ul>\n            <li>Write house number on any available house</li>\n            <li>\n              Add fence between any two houses on <em>any</em> street\n            </li>\n          </ul>\n          <p>o Doesn’t need to be adjacent to address just played</p>\n          <p>o Doesn’t require addresses on any side</p>\n          <ul>\n            <li>\n              Fences already exist at end of each street for purposes of\n              creating estates\n            </li>\n          </ul>\n          <p>\n            <strong>\n              Real Estate Agent{\" \"}\n              <img className=\"IconSmall\" src={IconRealEstate} /> – Increases\n              Estate Value\n            </strong>\n          </p>\n          <ul>\n            <li>Write house number on any available house</li>\n            <li>\n              Chose any column and cross off top-most, lowest-numbered space\n            </li>\n            <li>\n              Scoring: Multiply estates of each size X lowest unchecked number\n            </li>\n          </ul>\n          <p>\n            <strong>\n              Landscaper <img className=\"IconSmall\" src={IconPark} /> –\n              Increases Value of Street\n            </strong>\n          </p>\n          <ul>\n            <li>Write house number on any available house</li>\n            <li>\n              Cross off left most Park number on <em>same street</em> address\n              was added\n            </li>\n          </ul>\n          <p>\n            <strong>\n              Pool Manufacturer <img className=\"IconSmall\" src={IconSwimm} /> –\n              Increases Value of House with Planned Pools\n            </strong>\n          </p>\n          <ul>\n            <li>\n              Write house number on any available house{\" \"}\n              <em>with a planned pool</em>\n            </li>\n            <li>Cross off top-most, lowest-numbered box.</li>\n          </ul>\n          <p>\n            <strong>\n              Temp Agency <img className=\"IconSmall\" src={IconWork} /> – Allows\n              adjustment to House Number\n            </strong>\n          </p>\n          <ul>\n            <li>\n              Write house number on any available house; but allowed to\n              increase/decrease number by 0, 1, 2\n            </li>\n            <li>\n              Each time using Temp Agency cross off box from orange column\n            </li>\n            <li>\n              Game end scoring: Player with <em>most</em> crossed off boxes\n              earns 7 VPs, then 4, then 1 (friendly ties)\n            </li>\n          </ul>\n          <p>\n            o If two+ players tie for first both get 7; next player(s) gets 4,\n            etc.\n          </p>\n          <p>o Must cross off at least one box to earn points</p>\n          <ul>\n            <li>\n              Remember: Adjustment of 0 still allows you to cross off box if\n              using Temp Agency\n            </li>\n          </ul>\n          <p>\n            <strong>\n              Bis <img className=\"IconSmall\" src={IconBis} /> – Allows for\n              Duplicate Numbers Side-by-Side\n            </strong>\n          </p>\n          <ul>\n            <li>Write house number on any available house</li>\n            <li>\n              Write in <em>an additional</em> number that duplicates an already\n              existing house number (left or right side)\n            </li>\n          </ul>\n          <p>\n            o Second number doesn’t need to match first number from combination\n          </p>\n          <p>\n            o Duplicate numbers <em>can NOT</em> be separated by fences\n          </p>\n          <p>\n            o Write <em>Bis</em> alongside new number; House number can be\n            duplicated multiple times\n          </p>\n          <p>§ i.e., 4, 5bis, 5, 5bis, 7</p>\n          <ul>\n            <li>\n              Cross off top-most, lowest-numbered box; These are{\" \"}\n              <em>negative</em>\n              points\n            </li>\n          </ul>\n          <p>\n            <strong>Can’t Make a Legal Play? – Building Permit Refusal</strong>\n            (Cross off lowest number in Red 0/0/3/5 box); These are{\" \"}\n            <em>negative</em>\n            points\n          </p>\n          <p>\n            <strong>City Plans (Goal Cards)</strong>{\" \"}\n            <img className=\"IconSmall\" src={GoalCard} />\n          </p>\n\n          <ul>\n            <li>\n              Once a City Plan card has been achieved, Player marks highest\n              value VPs, then flips card\n            </li>\n            <li>\n              First player to claim a City Plan has option to reshuffle deck if\n              desired\n            </li>\n            <li>\n              All other players can gain secondary points for any future claims\n              of that achievement\n            </li>\n            <li>\n              Mark off fulfilled estates by filling in fences <em>above</em>{\" \"}\n              that estate to indicate it has been used\n            </li>\n          </ul>\n          <p>\n            o Any part of an estate marked off/claimed <em>can NOT</em> be used\n            to claim any other city plan\n          </p>\n          <p>\n            § Exception: A pool used in a city plan does not invalidate its\n            corresponding house for another plan\n          </p>\n          <p>o Any estate marked off/claimed can’t be sub-divided again</p>\n          <p>\n            <strong></strong>\n          </p>\n          <p>\n            <strong>Game End – </strong>1 - Player fills in every house; 2 -\n            Player completes all 3 City Plans; 3 - Player has 3 Building Permit\n            Refusals.\n          </p>\n\n          <a\n            href=\"https://boardgamegeek.com/boardgame/233867/welcome\"\n            className=\"btn btn-danger\"\n          >\n            More on Welcome To Game\n          </a>\n        </Container>\n      </>\n    );\n\n}\n\n\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nimport { Container, Button, Card } from \"react-bootstrap\";\nimport SocketContext from \"../socket-contex\";\n\n\n// IMAGES\nimport ImageCreateGame from '../Card/CardImage/pic5177842.jpg'\nimport ImageJoinGame from \"../Card/CardImage/1_omZ8d6IrFlpzEaa2ihKniQ@2x.jpeg\";\n\n\n// CSS\nimport \"./MainRoom.css\";\n\nlet MainRoom = () => {\n  const history = useHistory();\n\n  const socket = useContext(SocketContext);\n\n  const [gameId, setGameId] = useState([]); // create game function\n  const [joinedPlayer, setjoinedPlayer] = useState([]);\n  const [newGame, setnewGame] = useState(false);\n  const [role, setRole] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"NEW_GAME_CREATED\", (data) => {\n      console.log(\"CLIENT: DATI ARRIVO SERVER\", data);\n      setGameId((gameId) => data);\n      setnewGameHandler(true);\n      setRole(\"Host\");\n    });\n\n    socket.on(\"playerJoinedRoom\", (data) => {\n      console.log(\"CLIENT: playerJoinedRoom\", data);\n      setjoinedPlayer(data);\n\n      setPlayers((prev) => [...prev, data.name]);\n    });\n\n    socket.on(\"START_NEW_GAME\", (data) => {\n      history.push(`/carddrawer/${data.gameId}`);\n      console.log(\"ON GAME STATER\", data);\n    });\n  }, []);\n\n  function setnewGameHandler(x) {\n    setnewGame(x);\n  }\n\n  function handleJoinGame() {\n    socket.emit(\"MAIN_ROOM_CREATE_GAME\");\n  }\n\n  function handleStartGame() {\n    socket.emit(\"START_GAME_HOST\", gameId);\n    console.log(\"start\");\n  }\n\n  return (\n    <>\n      {!newGame === true ? (\n        <Container>\n          <Card>\n            <Card.Img variant=\"top\" src={ImageCreateGame} />\n            <Card.Body>\n              <Card.Text>\n                Create a game and play with friends with a gameId\n              </Card.Text>\n              <Button variant=\"primary\" onClick={handleJoinGame}>\n                Create a Game\n              </Button>\n            </Card.Body>\n          </Card>\n\n          <Card>\n            <Card.Img variant=\"top\" src={ImageJoinGame} />\n            <Card.Body>\n              <Card.Text>\n                Join a game session with a game id and play with friends\n              </Card.Text>\n              <Button\n                variant=\"success\"\n                onClick={() => history.push(\"/joingame\")}\n              >\n                Join a Game\n              </Button>\n            </Card.Body>\n          </Card>\n        </Container>\n      ) : (\n        <>\n          <Container className=\"form-contain\">\n            <div className='form'>\n              <h2>New Game created {gameId.gameId} </h2>\n              \n                <li>Share the Gameid code whit the other players</li>\n\n                <li>\n                  Wait until all player as joined the game, than press START\n                </li>\n              \n\n              <p>Player Joined:</p>\n\n              {players.map((data, idx) => (\n                <li key={idx}>{data}</li>\n              ))}\n              <Button variant=\"primary\" onClick={handleStartGame}>\n                Start the Game\n              </Button>\n            </div>\n          </Container>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MainRoom;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport WelcomeGame from \"../../../WelcomeGame/WelcomeGame/WelcomeGame\";\nimport { Link } from \"react-router-dom\";\nimport { Nav, Navbar, Tab, Tabs } from \"react-bootstrap\";\nimport FillablePdf from '../../../FillablePdf/FillablePdf';\nimport Home from \"../../../home\";\nimport Cards from \"../../CardMethods/CardDrawer\";\nimport Rulebook from \"../../../Rulespage/Rulespage\";\nimport './NavCss.css'\nimport CreateGame from '../../../MainRoom/MainRoom'\n\nfunction NavTab() {\n\n  const history = useHistory();\n const [key, setKey] = useState('home');\n\n  return (\n    //   <Tabs activeKey={key} onSelect={(k) => setKey(k)}>\n    //     <Tab\n    //       eventKey=\"home\"\n    //       title={\n    //         <Nav.Link as={Link} to=\"/\">\n    //           Home\n    //         </Nav.Link>\n    //       }\n    //     ></Tab>\n    //     <Tab eventKey=\"profile\" title=\"PDF\">\n    //       <FillablePdf />\n    //     </Tab>\n    //     <Tab\n    //       eventKey=\"Rulebook\"\n    //       title={\n    //         <Nav.Link as={Link} to=\"/rulebook\">\n    //           Rulebook\n    //         </Nav.Link>\n    //       }\n    //     ></Tab>\n    //     <Tab\n    //       eventKey=\"CreateGame\"\n    //       title={\n    //         <Nav.Link as={Link} to=\"/creategame\">\n    //         Create a Game\n    //         </Nav.Link>\n    //       }\n    //     >\n\n    //     </Tab>\n    //   </Tabs>\n\n    <Navbar\n      collapseOnSelect\n      expand=\"lg\"\n      sticky=\"top\"\n      className=\"NavWelcome\"\n      bg=\"danger\"\n      variant=\"dark\"\n    >\n      <Navbar.Brand href=\"#home\">\n        <Nav.Link as={Link} to=\"/\">\n          <WelcomeGame></WelcomeGame>\n        </Nav.Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          \n          <Nav.Link as={Link} to={\"/pdffilable\"}>\n            Pdf Sheet\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/rulebook\">\n            Rulebook\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/creategame\">\n            Create a Game\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\n\n\n\n\n\n\n  \n  \n\n\nexport default NavTab;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport SocketContext from './components/socket-contex'\nimport * as io from \"socket.io-client\";\n\n\n\n//Component\n\nimport JoinGame from './components/JoinGame/JoinGame'\nimport Navbar from \"./components/Card/NavBar/Tab/TabNavbar\";\nimport CardDrawer from \"./components/Card/CardMethods/CardDrawer\";\nimport RulesPage from \"./components/Rulespage/Rulespage\";\nimport CityPlanCardPage from './components/Card/CityPlanCard/CityPlanCard'\nimport Home from './components/home'\nimport FillablePdf from \"./components/FillablePdf/FillablePdf\"\nimport MainRoom from './components/MainRoom/MainRoom'\n \n\nconst socket = io(process.env.PORT); // same as io.connect() || , {transports: ['websocket']}\nfunction App() {\n              \n\n                 return (\n                   <>\n                     <SocketContext.Provider value={socket}>\n                       <BrowserRouter>\n                         <Navbar />\n\n                         <Switch>\n                           <Route path=\"/carddrawer\" component={CardDrawer} />\n                           <Route\n                             path=\"/cityplan\"\n                             component={CityPlanCardPage}\n                           />\n\n                           <Route path=\"/rulebook\" component={RulesPage} />\n                           <Route exact path=\"/\" component={Home} />\n                           <Route path=\"/pdffilable\" component={FillablePdf} />\n                           <Route path=\"/joingame\" component={JoinGame} />\n                           <Route path=\"/creategame\" component={MainRoom} />\n                           <Route path=\"/blank\" />\n                           \n                         </Switch>\n                       </BrowserRouter>\n                     </SocketContext.Provider>\n                   </>\n                 );\n               }\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n   <App></App>\n     \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n  //     `\n  // „¨°º¤ø„¸¸„ø¤º°¨¸„ø¤º\n  // ¨°º¤ø„¸DAFT¸„ø¤º°¨\n  // „ø¤º°¨ PUNK¨°º¤ø\n  // ¸„ø¤º°¨¸„ø¤ºº¤ø„¸¨°º¤\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}